name: Release
on:
  push:
    branches:
      - release/*
      - hotfix/*
  pull_request:
    branches:
      - develop
    types: [opened, synchronize, reopened]
    paths-ignore:
      - 'release/*'
      - 'hotfix/*'

jobs:
  release:
    name: Generate release
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'pull_request' && startsWith(github.event.pull_request.head.ref, 'feature/')) || (github.event_name == 'push' && (startsWith(github.ref, 'refs/heads/release/') || startsWith(github.ref, 'refs/heads/hotfix/'))) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Make Gradlew Executable
        run: chmod +x ./gradlew

      - name: Build and Push Docker Image
        run: |
          ./gradlew printVersion
          ./gradlew printProjectName
          VERSION=$(./gradlew -q printVersion)
          PROJECT_NAME=$(./gradlew -q printProjectName)
          IMAGE_TAG="$PROJECT_NAME:v$VERSION"
          docker build --file Dockerfile --build-arg SKIP_TESTS=true --tag $DOCKER_HUB_CLIENT_NAME/$IMAGE_TAG .
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker push $DOCKER_HUB_CLIENT_NAME/$IMAGE_TAG
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_TOKEN }}
          DOCKER_HUB_CLIENT_NAME: in2workspace
